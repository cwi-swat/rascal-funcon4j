initialise-binding(initialise-storing(initialise-giving(finalise-failing(accumulate(accumulate(map(), recursive(set("Sup"), accumulate(bind("Sup", give(bound-directly("Sup"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Sup", collateral(map(tuple("x", allocate-initialised-variable(integers, 0)))))))), collateral(map(tuple("method", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(1))))))))))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Sup", collateral(map(tuple("x", allocate-initialised-variable(integers, 0)))))))), collateral(map(tuple("method", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(1)))))))))), given)))))), accumulate(map(), recursive(set("Sub"), accumulate(bind("Sub", give(bound-directly("Sub"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Sub", collateral(), dereference(force(class-instantiator(bound("Sup")))))))), collateral(map(tuple("method", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(integer-add(42, assigned(bound("x")))))))))), "Sup")))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Sub", collateral(), dereference(force(class-instantiator(bound("Sup")))))))), collateral(map(tuple("method", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(integer-add(42, assigned(bound("x")))))))))), "Sup"))), given)))))), sequential(print(give(force(class-instantiator(bound("Sub"))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "method"), tuple(given)))), print("\n"), map()))))))