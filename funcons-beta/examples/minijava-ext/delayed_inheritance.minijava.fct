initialise-binding(initialise-storing(initialise-giving(finalise-failing(accumulate(accumulate(map(), recursive(set("Super"), accumulate(bind("Super", give(bound-directly("Super"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Super", collateral())))), collateral())))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Super", collateral())))), collateral()))), given)))))), accumulate(map(), recursive(set("Sub"), accumulate(bind("Sub", give(bound-directly("Sub"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral())))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral()))), given)))))), collateral(map(tuple("s", allocate-initialised-variable(pointers(objects), pointer-null)))), sequential(assign(bound("s"), force(class-instantiator(bound("Sub")))), map()), accumulate(map(), recursive(set("Sub"), accumulate(bind("Sub", give(bound-directly("Sub"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral(), "Super")))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral(), "Super"))), given)))))), accumulate(map(), recursive(set("Sub"), accumulate(bind("Sub", give(bound-directly("Sub"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral(map(tuple("sub", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(integer-multiply(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "sup"), tuple(given))), 7)))))))))))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Sub", collateral())))), collateral(map(tuple("sub", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(integer-multiply(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "sup"), tuple(given))), 7))))))))))), given)))))), accumulate(map(), recursive(set("Super"), accumulate(bind("Super", give(bound-directly("Super"), sequential(else(sequential(effect(follow-if-link(given)), set-link(given, merge-classes(follow-if-link(given), class(thunk(closure(reference(object(fresh-atom, "Super", collateral())))), collateral(map(tuple("sup", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(6))))))))))), set-link(given, class(thunk(closure(reference(object(fresh-atom, "Super", collateral())))), collateral(map(tuple("sup", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(6)))))))))), given)))))), sequential(print(give(assigned(bound("s")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "sub"), tuple(given)))), print("\n"), map()))))))